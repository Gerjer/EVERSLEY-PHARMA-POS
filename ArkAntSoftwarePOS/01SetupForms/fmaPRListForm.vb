Imports DevExpress.XtraGrid
Imports DevExpress.XtraGrid.Views.Card
Imports DevExpress.XtraGrid.Views.Grid
Imports DevExpress.XtraReports.UI
Imports MySql.Data
Imports MySql.Data.MySqlClient
Imports DevExpress.XtraEditors.Repository
Imports DevExpress.XtraGrid.Views.Base
Imports DevExpress.XtraEditors
Imports System.IO


Public Class fmaPRListForm    'Sub New()

    '    InitializeComponent()
    '    ' This line of code is generated by Data Source Configuration Wizard
    '    ' Fill a SqlDataSource
    '    SqlDataSource1.Fill()
    'End Sub


    Public FormControls As Collection
    Dim MeData As New DataTable

    Public Event ADD_BUTTON_CLICK()
    Public Event FORM_CLOSING()

    Private TABLENAME As String = "units"

    Private WithEvents SETUPFORM As fmaPurchaseRequestSetupForm

    Dim item_received As New List(Of pr_items)

    Private Sub ToolStripMenuItem3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Me.Close()
    End Sub



    Private Sub Button5_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnClose.Click
        Me.Close()
    End Sub


    Private Sub btnAdd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAdd.Click
        If SETUPFORM Is Nothing Then
            SETUPFORM = New fmaPurchaseRequestSetupForm
            SETUPFORM.OPERATION = "ADD"
        End If

        SETUPFORM.ShowDialog()
        LoadRISList()
    End Sub


    Private Sub btnDelete_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDelete.Click
        If MessageBox.Show("Are you sure you want to DELETE ITEM?", "Please Verify....", MessageBoxButtons.YesNo, MessageBoxIcon.Information) = DialogResult.Yes Then

        End If
    End Sub


    Private Sub btnEdit_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEdit.Click
        If SETUPFORM Is Nothing Then
            SETUPFORM = New fmaPurchaseRequestSetupForm
            SETUPFORM.OPERATION = "EDIT"
            SETUPFORM.PR_ID = PR_ID
        End If


        SETUPFORM.Show(Me)

        SETUPFORM.BringToFront()

    End Sub

    Dim FirstLoad As Boolean

    Dim dt_details As DataTable
    Private Sub fmaRISListForm_Load(sender As Object, e As EventArgs) Handles Me.Load


        FirstLoad = True

        Label1.Visible = False
        dtpTo.Visible = False


        PanelEx2.Text = "LIST OF PURCHASE REQUEST"
        'cmbMode.SelectedIndex = 1

        'btnAdd.Visible = True
        'btnEdit.Visible = True
        'btnDelete.Visible = True

        lblDate.Text = "MONTHLY"
        Label1.Visible = False
        dtpTo.Visible = False

        dtpFrom.Format = DateTimePickerFormat.Custom
        dtpFrom.CustomFormat = "MMMM"
        dtpFrom.ShowUpDown = False




        '   LoadComboBox()

        LoadRISList()

        FirstLoad = False
    End Sub


    Private Sub LoadRISList()

        item_received.Clear()
        GridControl1.DataSource = Nothing

        Try

            Dim SQL As String = " SELECT pr_id,pr_number,pr_date,fund_cluster,fund_cluster_id,total FROM pr_master"
            'SQL += "  INNER JOIN pr_details ON pr_master.pr_id = pr_details.pr_master_id"

            If cmbMode.SelectedIndex = 0 Then
                SQL += " WHERE DATE_FORMAT(pr_master.pr_date,'%Y') = '" & Format(dtpFrom.Value, "yyyy") & "' "
                date_name = Format(dtpFrom.Value, "yyyy") & " - "
            ElseIf cmbMode.SelectedIndex = 1 Then
                SQL += " WHERE DATE_FORMAT(pr_master.pr_date,'%M') = '" & Format(dtpFrom.Value, "MMMM") & "' "
                date_name = "Month of  " & Format(dtpFrom.Value, "MMMM") & " - "
            Else
                SQL += " WHERE pr_master.pr_date BETWEEN '" & Format(dtpFrom.Value, "yyyy-MM-dd") & "' AND  '" & Format(dtpTo.Value, "yyyy-MM-dd") & "' "
                date_name = "From " & Format(dtpFrom.Value, "MMMM") & " To " & Format(dtpTo.Value, "yyyy-MM-dd") & " - "
            End If



            SQL += " ORDER BY pr_date DESC "

            Dim dt As New DataTable
            dt = DataSource(SQL)

            GridControl1.DataSource = dt

            If dt.Rows.Count > 0 Then

                Dim param As String = ""
                For Each rows As DataRow In dt.Rows
                    If param = "" Then
                        param = rows("pr_id").ToString
                    Else
                        param += "," & rows("pr_id").ToString
                    End If

                Next

                Dim item_details As New DataTable
                item_details = getItemDetails(param)
                If item_details.Rows.Count > 0 Then

                    For Each row As DataRow In item_details.Rows
                        Dim obj As New pr_items
                        With obj
                            .pr_master_id = row("pr_id").ToString
                            .inv_master_code = row("inv_master_code").ToString
                            .inv_name = row("inv_name").ToString
                            .qty = row("qty").ToString
                            .unit_cost = row("unit_cost").ToString
                            .total = row("total").ToString

                        End With

                        item_received.Add(obj)

                    Next

                End If

                Dim dataset As New DataSet()


                Dim master As DataTable
                master = dt.Copy
                master.TableName = "Master"

                Dim itemDtls As DataTable
                itemDtls = item_details.Copy
                itemDtls.TableName = "ItemDetails"

                dataset.Tables.Add(master)
                dataset.Tables.Add(itemDtls)

                dataset.Relations.Add("ITEM DETAIL", master.Columns("pr_id"), itemDtls.Columns("pr_id"))

                GridControl1.DataSource = dataset
                GridControl1.DataMember = "master"


                GridView1.OptionsBehavior.Editable = False
                GridView1.Columns("pr_date").GroupIndex = 0
                GridView1.GroupFormat = "{0} : {1}"

            End If

        Catch ex As Exception
            MsgBox(ex.Message)
        End Try



    End Sub

    Private Function getItemDetails(PR_ID As String) As DataTable
        Dim sql As String = ""
        sql = "SELECT pr_master_id 'pr_id',inv_master_code,inv_name,qty,unit_cost,(qty*unit_cost) 'total'
               FROM pr_details

               WHERE
                     pr_master_id IN(" & PR_ID & ")
               ORDER BY
	                pr_master_id desc"
        Return DataSource(sql)
    End Function

    Dim dataSet11 As DataSet


    Private Sub LoadList()


        GridControl1.DataSource = Nothing

        If Me.Tag = 1 Then
            Try



                Dim str As String = ""
                If cmbMode.SelectedIndex = 0 Then
                    str += " WHERE supplier_type = 0 AND DATE_FORMAT(date_received,'%Y') = '" & Format(dtpFrom.Value, "yyyy") & "' "
                ElseIf cmbMode.SelectedIndex = 1 Then
                    str += " WHERE supplier_type = 0 AND DATE_FORMAT(date_received,'%M') = '" & Format(dtpFrom.Value, "MMMM") & "' "
                Else
                    str += " WHERE supplier_type = 0 AND date_received BETWEEN '" & Format(dtpFrom.Value, "yyyy-MM-dd") & "' AND  '" & Format(dtpTo.Value, "yyyy-MM-dd") & "' "
                End If


                Dim dataset As New DataSet()

                Dim dt_supplier As DataTable = getNodeSupplier(str)
                GridControl1.DataSource = dt_supplier
                Dim supplier As DataTable = dt_supplier.Copy
                supplier.TableName = "SUPPLIER"
                dataset.Tables.Add(supplier)

                Dim dt_received As DataTable = getNodeReceived(str)
                Dim received As DataTable = dt_received.Copy
                received.TableName = "RECEIVED DETAILS"
                dataset.Tables.Add(received)

                Dim dt_item As DataTable = getNodeItem(str)
                Dim item As DataTable = dt_item.Copy
                item.TableName = "ITEM DETAILS"
                dataset.Tables.Add(item)

                dataset.Relations.Add("RECEIVED DETAILS", supplier.Columns("RIS_No"), received.Columns("RIS_No"))
                dataset.Relations("RECEIVED DETAILS").Nested = True

                dataset.Relations.Add("ITEM DETAILS", received.Columns("RIS_No"), item.Columns("RIS_No"))
                dataset.Relations("ITEM DETAILS").Nested = True





                GridControl1.DataSource = dataset
                GridView1.Columns("RIS_No").VisibleIndex = -1



                Dim view As ColumnView = CType(GridControl1.FocusedView, ColumnView)
                Dim editingValue As String = Nothing
                If view IsNot Nothing And view.IsEditing Then
                    editingValue = view.EditingValue.ToString()
                End If


                Dim rowHandle As Integer = 0
                'Create the first detail by expanding a master row
                Dim gView As GridView = CType(GridControl1.MainView, GridView)
                gView.SetMasterRowExpanded(rowHandle, True)



            Catch ex As Exception
                MsgBox(ex.Message)
            End Try
        Else
            Try
                'cmbSupplier.SelectedValue = supplier_id
                'cmbProcurement.Text = mode_procurement

                Dim SQL As String = " SELECT ris_master.date_received,ris_details.inv_master_Name 'item_name' "
                SQL += " ,	inventory_master.method 'dosage_form',inventory_master.brand_name "
                SQL += " ,	ris_details.price 'cost_perunit',ris_details.qty_received 'qty' "
                SQL += " ,	FORMAT(ris_details.price * ris_details.qty_received,2) 'total_cost',supplier.a_name 'supplier_name' "
                SQL += " ,	inventory_master.manufacturer,ris_master.procurement_mode "
                SQL += " ,	ris_details.delivery_status,ris_master.bid_attemp "
                SQL += "  FROM 	ris_master"
                SQL += "  INNER JOIN ris_details ON ris_master.RIS_No = ris_details.RIS_Master_No"
                SQL += "  INNER JOIN inventory_master ON ris_details.inv_master_SysPK = inventory_master.a_code "
                SQL += "  INNER JOIN supplier ON ris_master.supplier_SysPK = supplier.SysPK AND supplier.supplier_type = 0"

                If cmbMode.SelectedIndex = 0 Then
                    SQL += " WHERE DATE_FORMAT(ris_master.date_received,'%Y') = '" & Format(dtpFrom.Value, "yyyy") & "' "
                    date_name = Format(dtpFrom.Value, "yyyy") & " - "
                ElseIf cmbMode.SelectedIndex = 1 Then
                    SQL += " WHERE DATE_FORMAT(ris_master.date_received,'%M') = '" & Format(dtpFrom.Value, "MMMM") & "' "
                    date_name = "Month of  " & Format(dtpFrom.Value, "MMMM") & " - "
                Else
                    SQL += " WHERE ris_master.date_received BETWEEN '" & Format(dtpFrom.Value, "yyyy-MM-dd") & "' AND  '" & Format(dtpTo.Value, "yyyy-MM-dd") & "' "
                    date_name = "From " & Format(dtpFrom.Value, "MMMM") & " To " & Format(dtpTo.Value, "yyyy-MM-dd") & " - "
                End If

                'If cmbSupplier.Text <> "" And cmbSupplier.Text <> "-- ALL --" Then
                '    SQL += " AND supplier.SysPK = '" & cmbSupplier.SelectedValue & "'"
                'End If

                'If cmbProcurement.Text <> "" And cmbProcurement.Text <> "-- ALL --" Then
                '    SQL += " AND procurement_mode = '" & cmbProcurement.Text & "'"
                'End If

                SQL += " ORDER BY `item_name` "

                Dim dt As New DataTable
                dt = DataSource(SQL)

                GridControl1.DataSource = dt
                DesigGRidView2(GridView1)
            Catch ex As Exception

            End Try
        End If



    End Sub

    Private Function getNodeItem(str As String) As DataTable
        Dim sql As String = ""
        sql = "SELECT
                  ris_master.RIS_No, 
	                inventory_master.a_code AS `ITEM CODE`, 
	                inventory_master.a_name AS `GENERIC NAME OF MEDICINE`, 
	                ris_details.qty_received AS `QTY RECEIVED`, 
	                ris_details.price AS `COST PER UNIT`, 
	                ris_details.price * ris_details.qty_received AS `TOTAL COST`, 
	                ris_details.qty_remaining AS `REMAINING QTY`, 
	                DATE_FORMAT(ris_details.expiry_date,'%m/%d/%Y') AS `EXPIRTY DATE`, 
	                ris_details.delivery_status AS `DELIVERY STATUS`, 
	                ris_details.location AS `STORAGE LOCATION`, 
	                ris_details.remarks AS REMARKS
                FROM
	                ris_master
	                INNER JOIN 	ris_details	ON 	ris_master.RIS_No = ris_details.RIS_Master_No
	                INNER JOIN	inventory_master	ON 	ris_details.inv_master_SysPK = inventory_master.a_code
	                INNER JOIN	supplier	ON	ris_master.supplier_SysPK = supplier.SysPK


                " & str & "


                ORDER BY date_received DESC
                     

                     "
        Return DataSource(sql)
    End Function

    Private Function getNodeReceived(str As String) As DataTable
        Dim sql As String = ""
        sql = "SELECT
  	            ris_master.RIS_No, 
                DATE_FORMAT(ris_master.date_received,'%m/%d/%Y') 'DATE RECEIVED', 
		            ris_master.si_no 'S.I No.#', 
		            DATE_FORMAT(ris_master.po_date,'%m/%d/%Y') 'P.O Date', 
		            ris_master.po_no 'P.O No.#', 
		            ris_master.received_by 'RECEIVED BY',
		            CASE WHEN  ris_master.approved_status = 0 THEN ''
				             WHEN  ris_master.approved_status = 1 THEN 'APPROVED'
				             ELSE 'REJECTED' END AS 'RIS STATUS',
		            procurement_mode 'MODE OF PROCUREMENT',
		            fund_cluster 'FUND CLUSTER',
		            bid_attemp 'BID ATTEMP'

            FROM
	            ris_master
	            INNER JOIN 	ris_details	ON 	ris_master.RIS_No = ris_details.RIS_Master_No
	            INNER JOIN	inventory_master	ON 	ris_details.inv_master_SysPK = inventory_master.a_code
	            INNER JOIN	supplier	ON	ris_master.supplier_SysPK = supplier.SysPK


            " & str & "


            ORDER BY date_received DESC	
	
            "
        Return DataSource(sql)
    End Function

    Private Function getNodeSupplier(str As String) As DataTable
        Dim sql As String = ""
        sql = "SELECT
  	            ris_master.RIS_No, 
		            supplier.a_name 'SUPPLIER'

            FROM
	            ris_master
	            INNER JOIN 	ris_details	ON 	ris_master.RIS_No = ris_details.RIS_Master_No
	            INNER JOIN	inventory_master	ON 	ris_details.inv_master_SysPK = inventory_master.a_code
	            INNER JOIN	supplier	ON	ris_master.supplier_SysPK = supplier.SysPK

            " & str & "


            ORDER BY date_received DESC	"
        Return DataSource(sql)
    End Function

    Private Sub DesigGRidView1(gridview As GridView)

        Dim View As GridView = DirectCast(gridview, GridView)

        '     View.BeginUpdate()
        View.OptionsBehavior.Editable = False
        View.OptionsFind.AlwaysVisible = True
        View.OptionsFind.Behavior = DevExpress.XtraEditors.FindPanelBehavior.Search
        View.OptionsFind.FindMode = DevExpress.XtraEditors.FindMode.Always

        For i As Integer = 0 To View.Columns.Count - 1

            Select Case i
                Case 1
                    View.Columns(i).Caption = "SUPPLIER"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Near
                '    View.Columns(i).Width = 350
                Case 2
                    View.Columns(i).Caption = "RECEIVED DETAILS"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Near
              '      View.Columns(i).Width = 100
                Case 5
                    View.Columns(i).Caption = "GENERIC NAME OF MEDICINE"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Near
                    View.Columns(i).Width = 400
                Case 6
                    View.Columns(i).Caption = "QTY RECEIVED"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).DisplayFormat.FormatString = "###,###.00"
                    View.Columns(i).Width = 120
                Case 7
                    View.Columns(i).Caption = "PRICE PER UNIT"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Far
                    View.Columns(i).DisplayFormat.FormatString = "###,###.00"
                    View.Columns(i).Width = 120
                Case 8
                    View.Columns(i).Caption = "QTY REMAINING"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).DisplayFormat.FormatString = "###,###.00"
                    View.Columns(i).Width = 120
                Case 9
                    View.Columns(i).Caption = "DELIVERY STATUS"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).Width = 100
                Case 10
                    View.Columns(i).Caption = "STORAGE LOCATION"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Near
                    View.Columns(i).Width = 200
                Case 11
                    View.Columns(i).Caption = "EXPIRY DATE"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).Width = 120
                Case 12
                    View.Columns(i).Caption = "REMARKS"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).Width = 400
                Case Else
                    View.Columns(i).Visible = False
            End Select

        Next

        View.GroupFormat = "{1}"
        View.Columns("supplier").GroupIndex = 0
        View.Columns("ReceiveDetails").GroupIndex = 1
        View.ExpandAllGroups()

    End Sub

    Private Sub DesigGRidView2(gridview As GridView)

        Dim View As GridView = DirectCast(gridview, GridView)
        View.OptionsBehavior.Editable = False

        View.BeginUpdate()

        For i As Integer = 0 To View.Columns.Count - 1

            Select Case i
                Case 1
                    View.Columns(i).Caption = "GENERIC NAME OF MEDICINE"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Near
                    View.Columns(i).Width = 350
                Case 2
                    View.Columns(i).Caption = "DOSAGE FORM"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).Width = 100
                Case 3
                    View.Columns(i).Caption = "BRAND NAME"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).Width = 100
                Case 4
                    View.Columns(i).Caption = "COST PER UNIT"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).DisplayFormat.FormatString = "###,###.00"
                    View.Columns(i).Width = 100
                Case 5
                    View.Columns(i).Caption = "QUANTITY"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).Width = 80
                Case 6
                    View.Columns(i).Caption = "TOTAL COST"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Far
                    View.Columns(i).Width = 80
                Case 7
                    View.Columns(i).Caption = "SUPPLIER"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Near
                    View.Columns(i).Width = 200
                Case 8
                    View.Columns(i).Caption = "MANUFACTURER"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Near
                    View.Columns(i).Width = 180
                Case 9
                    View.Columns(i).Caption = "MODE OF PROCUREMENT"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).Width = 150
                Case 10
                    View.Columns(i).Caption = "DELIVERY STATUS"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).Width = 100
                Case 11
                    View.Columns(i).Caption = "BID ATTEMP"
                    View.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    View.Columns(i).Width = 80
                Case Else
                    View.Columns(i).Visible = False
            End Select

        Next

        View.EndUpdate()

    End Sub




    Dim Mode As String = ""



    Private Sub dtpFrom_ValueChanged(sender As Object, e As EventArgs) Handles dtpFrom.ValueChanged
        LoadRISList()
    End Sub

    Private Sub dtpTo_ValueChanged(sender As Object, e As EventArgs) Handles dtpTo.ValueChanged
        LoadRISList()
    End Sub



    Dim date_name As String = ""
    Private Sub cmbMode_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cmbMode.SelectedIndexChanged

        If FirstLoad = False Then
            Try
                Mode = cmbMode.Text
                If Mode = "YEAR" Then
                    lblDate.Text = "YEAR"
                    Label1.Visible = False
                    dtpTo.Visible = False

                    dtpFrom.Format = DateTimePickerFormat.Custom
                    dtpFrom.CustomFormat = "yyyy"
                    dtpFrom.ShowUpDown = True


                ElseIf Mode = "MONTHLY" Then
                    lblDate.Text = "MONTHLY"
                    Label1.Visible = False
                    dtpTo.Visible = False

                    dtpFrom.Format = DateTimePickerFormat.Custom
                    dtpFrom.CustomFormat = "MMMM"
                    dtpFrom.ShowUpDown = False

                Else

                    lblDate.Text = "DATE FROM"
                    Label1.Visible = True
                    dtpTo.Visible = True

                    dtpFrom.Format = DateTimePickerFormat.Custom
                    dtpFrom.CustomFormat = "MMM dd, yyyy"
                    dtpFrom.ShowUpDown = False

                End If
            Catch ex As Exception

            End Try
        End If


    End Sub

    Dim procurement_medicine As New List(Of procured_medicine)

    Private Sub btnPrint_Click(sender As Object, e As EventArgs) Handles btnPrint.Click
        Dim SQLEX As String = "SELECT concat('PR No. : ', pr_master.pr_number) 'pr_number'
                                , pr_master.pr_date
                                , pr_master.fund_cluster
                                , pr_master.fund_cluster_id
                                , pr_master.total
                                , concat('PURPOSE : ', pr_master.purpose) 'purpose'
                                , pr_details.inv_master_code
                                , pr_details.inv_name
                                , pr_details.qty
                                , pr_details.unit_cost
                                , (pr_details.qty * pr_details.unit_cost) 'total_cost'
                                , inventory_master.uom
                            FROM  pr_details
                            INNER JOIN pr_master 
                                ON (pr_details.pr_master_id = pr_master.pr_id)
                            INNER JOIN inventory_master 
                                    ON (pr_details.inv_master_code = inventory_master.a_code)"
        SQLEX += " WHERE pr_master.pr_id='" & Me.PR_ID & "'"




        Dim new_report As New fzzReportViewerForm
        Try

            new_report.AttachReport(SQLEX, "Purchase Request " & PR_ID) = New rpt_PurchaseRequest
            new_report.Show()
        Catch ex As Exception
            MsgBox("Exception Occured :", ex.Message)
        End Try

    End Sub

    Dim PR_ID As String = ""

    Private Sub GridView1_RowCellClick(sender As Object, e As RowCellClickEventArgs) Handles GridView1.RowCellClick

        Dim view As GridView = DirectCast(sender, GridView)

        If view.RowCount > 0 Then

            btnAdd.Visible = True
            btnEdit.Visible = True
            btnDelete.Visible = True

            PR_ID = view.GetFocusedRowCellValue("pr_id").ToString

        End If

        btnAdd.Visible = True
        btnEdit.Visible = True
        btnDelete.Visible = True
    End Sub

    Private Sub GridView1_MasterRowExpanded(sender As Object, e As CustomMasterRowEventArgs) Handles GridView1.MasterRowExpanded
        Dim master As GridView = TryCast(sender, GridView)

        PR_ID = master.GetFocusedRowCellValue("pr_id").ToString

        Dim details As GridView = TryCast(master.GetDetailView(e.RowHandle, e.RelationIndex), GridView)

        details.OptionsBehavior.Editable = False
        details.OptionsView.ShowVerticalLines = DevExpress.Utils.DefaultBoolean.False
        details.OptionsView.ShowHorizontalLines = DevExpress.Utils.DefaultBoolean.False

        For i As Integer = 0 To details.Columns.Count - 1

            Select Case i
                Case 1
                    details.Columns(i).Caption = "ITEM CODE"
                    details.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    details.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    details.Columns(i).Width = 150
                Case 2
                    details.Columns(i).Caption = "ITEM NAME"
                    details.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    details.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Near
                    details.Columns(i).Width = 400
                Case 3
                    details.Columns(i).Caption = "PR QUANTITY"
                    details.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    details.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    details.Columns(i).Width = 150
                Case 4
                    details.Columns(i).Caption = "PRICE PER UNIT"
                    details.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    details.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Far
                    details.Columns(i).DisplayFormat.FormatString = "###,###.00"
                    details.Columns(i).Width = 150
                Case 5
                    details.Columns(i).Caption = "TOTAL COST"
                    details.Columns(i).AppearanceHeader.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Center
                    details.Columns(i).AppearanceCell.TextOptions.HAlignment = DevExpress.Utils.HorzAlignment.Far
                    details.Columns(i).DisplayFormat.FormatString = "###,###.00"
                    details.Columns(i).Width = 200

                Case Else
                    details.Columns(i).Visible = False
            End Select

        Next


    End Sub


End Class