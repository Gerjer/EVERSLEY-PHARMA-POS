Imports System.ComponentModel
Imports System.IO
Imports MySql.Data.MySqlClient

Public Class fmaRISSetupForm

    Private row_Index_Click As Integer = -1
    Private col_Index_Click As Integer = -1

    Private Sub fmaRISSetupForm_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        txtReceiveDate.Value = Date.Now
        txtPODate.Value = Date.Now
        dtExpiryDate.Value = Date.Now

        displaySuppliers()
        displayItems()
        displayLocation()
        loadComboBox

        If isWithAttachment.Checked = False Then
            LabelX9.Visible = False
            btnAttachFile.Visible = False
            GroupBox1.Visible = False
        End If

        final_attach_file.Clear()

    End Sub

    Private Sub loadComboBox()

        cmbBidding.DataSource = DataSource(String.Format("SELECT DISTINCT   0 AS 'id',	bid_attemp 'name' FROM	ris_master 	WHERE bid_attemp is NOT NULL AND bid_attemp <> ''	"))
        cmbBidding.ValueMember = "id"
        cmbBidding.DisplayMember = "name"
        cmbBidding.SelectedIndex = -1

        txtReceivedBy.DataSource = DataSource(String.Format("SELECT DISTINCT   0 AS 'id',	received_by 'name' FROM	ris_master 	WHERE received_by is NOT NULL AND received_by <> ''	ORDER BY received_by"))
        txtReceivedBy.ValueMember = "id"
        txtReceivedBy.DisplayMember = "name"
        txtReceivedBy.SelectedIndex = -1

        cmbDeliveryStatus.DataSource = DataSource(String.Format("SELECT DISTINCT   0 AS 'id',	delivery_status 'name' FROM	ris_details 	WHERE delivery_status is NOT NULL AND delivery_status <> ''	"))
        cmbDeliveryStatus.ValueMember = "id"
        cmbDeliveryStatus.DisplayMember = "name"
        cmbDeliveryStatus.SelectedIndex = -1

        txtProcurementMode.DataSource = DataSource(String.Format("SELECT DISTINCT   0 AS 'id',	procurement_mode 'name' FROM	ris_master 	WHERE procurement_mode is NOT NULL"))
        txtProcurementMode.ValueMember = "id"
        txtProcurementMode.DisplayMember = "name"
        txtProcurementMode.SelectedIndex = -1

    End Sub

    Private Sub displaySuppliers()
        Dim MeData As New DataTable
        Dim SQL As String = ""

        MeData = Nothing
        SQL = "SELECT a_code,a_name FROM supplier order by a_name"
        MeData = clsDBConn.ExecQuery(SQL)
        Me.txtSupplierName.DataSource = MeData
        Me.txtSupplierName.DisplayMember = "a_name"
        Me.txtSupplierName.ValueMember = "a_code"
        Me.txtSupplierName.Text = ""
        Me.txtSupplierName.SelectedIndex = -1
        Me.txtSupplierCode.Text = ""
    End Sub

    Private Sub displayItems()
        Dim MeData As New DataTable
        Dim SQL As String = ""

        MeData = Nothing
        SQL = "SELECT a_code,a_name FROM inventory_master order by a_name"
        MeData = clsDBConn.ExecQuery(SQL)
        Me.cmbxItem.DataSource = MeData
        Me.cmbxItem.DisplayMember = "a_name"
        Me.cmbxItem.ValueMember = "a_code"
        Me.cmbxItem.Text = ""
        Me.cmbxItem.SelectedIndex = -1
        Me.txtItemCode.Text = ""
    End Sub

    Private Sub displayLocation()
        Dim MeData As New DataTable
        Dim SQL As String = ""

        MeData = Nothing
        SQL = "SELECT a_code,location_name  FROM inventory_location"
        MeData = clsDBConn.ExecQuery(SQL)
        Me.cmbxLocation.DataSource = MeData
        Me.cmbxLocation.DisplayMember = "location_name"
        Me.cmbxLocation.ValueMember = "a_code"
        Me.cmbxLocation.Text = ""
        Me.cmbxLocation.SelectedIndex = -1
        Me.txtLocationCode.Text = ""
    End Sub

    Private Sub txtSupplierName_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txtSupplierName.SelectedIndexChanged
        Try
            Dim drv As DataRowView = DirectCast(txtSupplierName.SelectedItem, DataRowView)
            Me.txtSupplierCode.Text = drv.Item("a_code").ToString
        Catch ex As Exception
            Me.txtSupplierCode.Text = ""
        End Try
    End Sub


    Private Sub cmbxItem_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cmbxItem.SelectedIndexChanged
        Try
            Dim drv As DataRowView = DirectCast(cmbxItem.SelectedItem, DataRowView)
            Me.txtItemCode.Text = drv.Item("a_code").ToString
        Catch ex As Exception
            Me.txtItemCode.Text = ""
        End Try
    End Sub


    Private Sub cmbxLocation_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cmbxLocation.SelectedIndexChanged
        Try
            Dim drv As DataRowView = DirectCast(cmbxLocation.SelectedItem, DataRowView)
            Me.txtLocationCode.Text = drv.Item("a_code").ToString
        Catch ex As Exception
            Me.txtLocationCode.Text = ""
        End Try

    End Sub

    Private Sub btnAddItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAddItem.Click

        'check filter

        If txtItemCode.Text.Length = 0 Then
            MsgBox("Please select Item", MsgBoxStyle.Critical)
            Exit Sub
        End If

        If diItemQty.Value <= 0 Then
            MsgBox("Item Quantity should be above Zero", MsgBoxStyle.Critical)
            Exit Sub
        End If

        If txtLocationCode.Text.Length = 0 Then
            MsgBox("Please select Location", MsgBoxStyle.Critical)
            Exit Sub
        End If

        ' add to list
        dgvFEES.Rows.Add(New String() {Me.cmbxItem.Text, Me.diItemQty.Text, Me.diPrice.Text, Format(Me.dtExpiryDate.Value, "yyyy-MM-dd"), Me.cmbxLocation.Text, Me.txtRemarks.Text, Me.txtItemCode.Text, Me.txtLocationCode.Text, "EDIT", "REMOVE", cmbDeliveryStatus.Text})

        clearItems()

        'For Each row In attach_file.ToList
        '    Dim obj As New attach_file
        '    With obj
        '        .attach_type = row.attach_type
        '        .attach_file_name = row.attach_file_name
        '        .attach_file_path = row.attach_file_path
        '        .attach_file_dir = row.attach_file_dir
        '        .attach_image = row.attach_image
        '    End With
        '    final_attach_file.Add(obj)
        'Next


    End Sub

    Private Sub clearItems()
        cmbxItem.SelectedIndex = -1
        diItemQty.Value = 0
        dtExpiryDate.Value = Date.Now
        cmbxLocation.SelectedIndex = -1
        txtRemarks.Text = ""
        diPrice.Value = 0

        txtLocationCode.Text = ""
        txtItemCode.Text = ""
    End Sub

    Private Sub clearRIS()
        txtRISNo.Text = ""
        txtProcurementMode.Text = ""
        txtSupplierName.SelectedIndex = -1
        txtSupplierCode.Text = ""

        txtFundCluster.Text = ""
        txtPONo.Text = ""
        txtPODate.Value = Date.Now
        txtReceiveDate.Value = Date.Now

        txtSINo.Text = ""
        isWithAttachment.CheckState = CheckState.Unchecked


    End Sub

    Private Sub ButtonX2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ButtonX2.Click
        clearItems()
        clearRIS()
    End Sub



    Private Sub dgvFEES_CellMouseUp(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellMouseEventArgs) Handles dgvFEES.CellMouseUp
        If e.Button = Windows.Forms.MouseButtons.Left Then
            If e.ColumnIndex = 8 Then
                dgvFEES.Rows.RemoveAt(e.RowIndex)
            End If
        End If
    End Sub

    Private Sub btnSaveRIS_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSaveRIS.Click
        If MessageBox.Show("Are you sure you want to SAVE RIS?", "Please Verify....", MessageBoxButtons.YesNo, MessageBoxIcon.Information) = DialogResult.Yes Then

            ' CHECK LIST
            If txtRISNo.Text.Length = 0 Then
                MsgBox("Please enter RIS Number.", MsgBoxStyle.Critical)
                Exit Sub
            End If


            If txtProcurementMode.Text.Length = 0 Then
                MsgBox("Please enter Procurement Mode.", MsgBoxStyle.Critical)
                Exit Sub
            End If

            If txtSupplierName.Text.Length = 0 Then
                MsgBox("Please enter Supplier.", MsgBoxStyle.Critical)
                Exit Sub
            End If

            If txtFundCluster.Text.Length = 0 Then
                MsgBox("Please enter Fund Cluster.", MsgBoxStyle.Critical)
                Exit Sub
            End If

            If txtPONo.Text.Length = 0 Then
                MsgBox("Please enter PO Number.", MsgBoxStyle.Critical)
                Exit Sub
            End If


            If txtSINo.Text.Length = 0 Then
                MsgBox("Please enter SI Number.", MsgBoxStyle.Critical)
                Exit Sub
            End If

            If isWithAttachment.Checked = False Then
                MsgBox("Please set Attachment.", MsgBoxStyle.Critical)
                '              Exit Sub
            End If


            'save RISMaster
            Dim SQLIN As String = "INSERT INTO ris_master(RIS_No,date_received,po_no,po_date,procurement_mode,"
            SQLIN += " si_no,supplier,supplier_SysPK,fund_cluster,attached_PO_SI,received_by,bid_attemp)"
            SQLIN += " VALUES("
            SQLIN += String.Format("'{0}', '{1}', '{2}',", Me.txtRISNo.Text, Format(txtReceiveDate.Value, "yyyy-MM-dd"), Me.txtPONo.Text)
            SQLIN += String.Format("'{0}', '{1}', '{2}',", Format(txtPODate.Value, "yyyy-MM-dd"), Me.txtProcurementMode.Text, Me.txtSINo.Text)
            SQLIN += String.Format("'{0}', '{1}', '{2}',", Me.txtSupplierName.Text, Me.txtSupplierCode.Text, Me.txtFundCluster.Text)
            SQLIN += String.Format("'{0}', '{1}','{2}')", IIf(isWithAttachment.Checked = True, 1, 0), Me.txtReceivedBy.Text, cmbBidding.Text)

            If clsDBConn.Execute(SQLIN) Then
                insertRISDetails()

                If isWithAttachment.Checked = True Then

                    SQLIN = ""
                    'Insert RIS Attachment
                    Dim lastPK = DataObject(String.Format("SELECT max(RIS_No) FROM ris_master"))
                    For Each row In attach_file.ToList

                        Dim new_dir = row.attach_file_dir
                        new_dir = System.IO.Path.Combine(new_dir, lastPK & "-" & row.attach_file_name).Replace("\", "\\")

                        SQLIN = " INSERT INTO ris_attachment(RIS_Master_No,attach_type,attach_filename,attach_dir)"
                        SQLIN += " VALUES("
                        SQLIN += String.Format("'{0}',", lastPK)
                        SQLIN += String.Format("'{0}',", row.attach_type)
                        SQLIN += String.Format("'{0}',", row.attach_file_name)
                        SQLIN += String.Format("'{0}')", new_dir)

                        If clsDBConn.Execute(SQLIN) Then

                            Dim picbox As New PictureBox

                            Dim File1 As Image = row.attach_image
                            picbox.Image = File1
                            If Not File.Exists(new_dir) Then
                                picbox.Image.Save(new_dir)
                            Else
                                'remove existing photo
                                File.Delete(new_dir)
                                picbox.Image.Save(new_dir)
                            End If

                        End If

                    Next

                End If
            End If

        End If
    End Sub

    Private Sub insertRISDetails()
        For nCtr As Integer = 0 To dgvFEES.Rows.Count - 1

            Dim inv_master_SysPK As String = dgvFEES.Item(6, nCtr).Value.ToString
            Dim inv_master_Name As String = dgvFEES.Item(0, nCtr).Value.ToString
            Dim qty_received As Double = CDbl(dgvFEES.Item(1, nCtr).Value.ToString)
            Dim price As Double = CDbl(dgvFEES.Item(2, nCtr).Value.ToString)

            Dim expiry_date As String = dgvFEES.Item(3, nCtr).Value.ToString
            Dim location As String = dgvFEES.Item(4, nCtr).Value.ToString
            Dim remarks As String = dgvFEES.Item(5, nCtr).Value.ToString
            Dim location_id As String = dgvFEES.Item(7, nCtr).Value.ToString

            Dim delivery_status As String = dgvFEES.Item(9, nCtr).Value.ToString

            Dim SQLIN As String = "INSERT INTO ris_details(RIS_Master_No,inv_master_SysPK,inv_master_Name,"
            SQLIN += " qty_received, price, remarks, expiry_date, location, location_id,delivery_status)"
            SQLIN += " VALUES("
            SQLIN += String.Format("'{0}','{1}','{2}',", txtRISNo.Text, inv_master_SysPK, inv_master_Name)
            SQLIN += String.Format("'{0}','{1}','{2}','{3}',", qty_received, price, remarks, expiry_date)
            SQLIN += String.Format("'{0}','{1}','{2}')", location, location_id, delivery_status)


            If clsDBConn.Execute(SQLIN) Then

            End If

        Next
    End Sub

    Private Sub ButtonX3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ButtonX3.Click
        Me.Close()
    End Sub


    Private Sub isWithAttachment_CheckedChanged(sender As Object, e As EventArgs) Handles isWithAttachment.CheckedChanged
        If isWithAttachment.Checked = False Then
            LabelX9.Visible = False
            btnAttachFile.Visible = False
            GroupBox1.Visible = False
        Else
            LabelX9.Visible = True
            btnAttachFile.Visible = True
            GroupBox1.Visible = True
        End If
    End Sub

    Dim final_attach_file As New List(Of attach_file)
    Dim attach_file As New List(Of attach_file)

    Private Sub btnAttachFile_Click(sender As Object, e As EventArgs) Handles btnAttachFile.Click

        attach_file.Clear()

        Dim frm As New frmAttacheFile
        frm.BringToFront()
        frm.ShowDialog()

        If frm.IfThereIsTransaction = True Then
            Dim dt As New DataTable
            dt.Columns.Add("FILE NAME")
            dt.Columns.Add("LINK PATH")
            For Each row In frm.file_attach.ToList
                dt.Rows.Add(row.attach_file_name, row.attach_file_path)
            Next
            gcLink.DataSource = dt
            attach_file = frm.file_attach
        End If

    End Sub

    Private Sub gvLink_RowCellClick(sender As Object, e As DevExpress.XtraGrid.Views.Grid.RowCellClickEventArgs) Handles gvLink.RowCellClick

        Dim LinkFile = gvLink.GetFocusedRowCellValue("LINK PATH").ToString
        If My.Computer.FileSystem.FileExists(LinkFile) Then
            Process.Start(LinkFile)
        Else
            MsgBox("File does not exist", MsgBoxStyle.Critical, "FIL NOT FOUND")
        End If

    End Sub
End Class